name: tag-release-version
on:
  push:
    branches:
      - release
jobs:
  create-tag-version:
    name: Create Tag Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha }}
        fetch-depth: '0'

    - name: Get tag from project
      uses: bbonkr/get-version-action@v1
      id: get_version
      with:
        project: './package.json'
        show_log_message: true

    - name: logging
      run: |
        echo "version=${{ steps.get_version.outputs.version }}"
        echo "major=${{ steps.get_version.outputs.major }}"
        echo "minor=${{ steps.get_version.outputs.minor }}"
        echo "patch=${{ steps.get_version.outputs.patch }}"
        echo "pre-release=${{ steps.get_version.outputs.pre-release }}"
        echo "build=${{ steps.get_version.outputs.build }}"

    - name: Create git tag
      run: |
          git tag v${{ steps.get_version.outputs.version }}
          
    - name: Push git tag
      run: git push origin v${{ steps.get_version.outputs.version }}

    # - name: Bump version and push tag
    #   uses: anothrNick/github-tag-action@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    #     WITH_V: true
    #     PRERELEASE: true
    #     # default bump is minor, format: major.minor.patch
    #     DEFAULT_BUMP: patch 

  create-release:
    needs: create-tag-version
    name: Create Release Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.merge_commit_sha }}
        fetch-depth: '0'

    - name: "Set latest tag"
      id: set-latest-tag
      run: echo "latest_tag=$(git tag | sort --version-sort | tail -n1)" >> $GITHUB_ENV
      
    - name: Create Release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} 
      with:
          tag_name: ${{ env.latest_tag }}
          release_name: Release ${{ env.latest_tag }}
          draft: false
          prerelease: false
